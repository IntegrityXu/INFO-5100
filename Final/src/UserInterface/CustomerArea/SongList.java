/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustomerArea;

import Music.Album;
import MusicEcosystem.Organization.CustomerOrganization;
import MusicEcosystem.Organization.SongOrganization;
import MusicEcosystem.UserAccount.CustomerAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author liwen
 */
public class SongList extends javax.swing.JPanel {

    /**
     * Creates new form SongList
     */
    private JPanel container;
    private CustomerAccount account;
    private CustomerOrganization customerOrganization;
    public SongList( JPanel container, CustomerAccount account, CustomerOrganization customerOrganization ) {
        initComponents();
        this.container = container;
        this.account = account;
        this.customerOrganization = customerOrganization;
        this.setSize(630, 511);
        populateTable();
        populateCbx();
    }
    
    public void populateTable() {
        int count = songListTbl.getRowCount();
        DefaultTableModel model = (DefaultTableModel) songListTbl.getModel();
        for (int i = count - 1; i >= 0; i --) {
            model.removeRow(i);
        }
        
        for (Album al : account.getAlbumDirectory().getAlbumList()) {
            Object[] row = new Object[2];
            row[0] = al;
            row[1] = al.getLimit();
            model.addRow(row);
        }
    }

    public void populateCbx() {
        limitCbx.removeAllItems();
        limitCbx.addItem(Album.Limit.Pri.getValue());
        limitCbx.addItem(Album.Limit.Pub.getValue());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ViewOtherListBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        songListTbl = new javax.swing.JTable();
        AddListBtn = new javax.swing.JButton();
        ListNameTxt = new javax.swing.JTextField();
        limitCbx = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        DeleteBtn = new javax.swing.JButton();
        ViewBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        changeLimitBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(217, 220, 242));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("My  SongList");

        ViewOtherListBtn.setText("View Others Songlist");
        ViewOtherListBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewOtherListBtnActionPerformed(evt);
            }
        });

        songListTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ListName", "Limit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(songListTbl);

        AddListBtn.setText("Add List");
        AddListBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddListBtnActionPerformed(evt);
            }
        });

        ListNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListNameTxtActionPerformed(evt);
            }
        });

        limitCbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "private", "public" }));

        jLabel2.setText("Select Limit:");

        jLabel3.setText("List Name:");

        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        ViewBtn.setText("View");
        ViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewBtnActionPerformed(evt);
            }
        });

        backBtn.setText("< < back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        changeLimitBtn.setText("Change Limit");
        changeLimitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeLimitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(backBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ListNameTxt)
                                    .addComponent(limitCbx, 0, 184, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(changeLimitBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ViewBtn))
                                    .addComponent(AddListBtn)))
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(ViewOtherListBtn)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(15, 15, 15)
                .addComponent(ViewOtherListBtn)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ListNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(limitCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddListBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(changeLimitBtn)
                    .addComponent(DeleteBtn)
                    .addComponent(ViewBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backBtn)
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ListNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ListNameTxtActionPerformed

    private void AddListBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddListBtnActionPerformed
        // TODO add your handling code here:
        if (ListNameTxt.getText().equals("")){
            JOptionPane.showMessageDialog(null, "The name of songList cann't be empty!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Album album = new Album(ListNameTxt.getText());
        album.setLimit((String)limitCbx.getSelectedItem());
        int result = account.getAlbumDirectory().AddAlbum(album);
        if (result == 0) {
            JOptionPane.showMessageDialog(null, "This songList has exist! Please change a name.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        JOptionPane.showMessageDialog(null, "Add new songList successfully !");
        ListNameTxt.setText("");
        populateTable();
    }//GEN-LAST:event_AddListBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        // TODO add your handling code here:
        int selectRow = songListTbl.getSelectedRow();
        if (selectRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select one row first!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int result = JOptionPane.showConfirmDialog(null, "Are you sure to delete this songLsit?", "Warnign", JOptionPane.YES_NO_OPTION);
        if ( result == JOptionPane.NO_OPTION) {
            return;
        }
        Album album = (Album) songListTbl.getValueAt(selectRow, 0);
        account.getAlbumDirectory().RemoveAlbum(album);
        JOptionPane.showMessageDialog(null, "Delete songList successfully!");
        populateTable();
        
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void ViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBtnActionPerformed
        // TODO add your handling code here:
        int selectRow = songListTbl.getSelectedRow();
        if (selectRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select one row first!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Album album = (Album) songListTbl.getValueAt(selectRow, 0);
        ViewSongListSong vslsJP = new ViewSongListSong(container, album);
        container.add("ViewSongListSong", vslsJP);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_ViewBtnActionPerformed

    private void ViewOtherListBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewOtherListBtnActionPerformed
        // TODO add your handling code here:
        AllSongList aslJP = new AllSongList(container, customerOrganization,account);
        container.add("AllSongList", aslJP);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
        
    }//GEN-LAST:event_ViewOtherListBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout)container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backBtnActionPerformed

    private void changeLimitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeLimitBtnActionPerformed
        // TODO add your handling code here:
        int selectRow = songListTbl.getSelectedRow();
        if (selectRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select one row first!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int result = JOptionPane.showConfirmDialog(null, "Are you sure to change the limit of this songList?", "Warnign", JOptionPane.YES_NO_OPTION);
        if ( result == JOptionPane.NO_OPTION) {
            return;
        }
        
        Album album = (Album) songListTbl.getValueAt(selectRow, 0);
        album.setLimit((String)limitCbx.getSelectedItem());
        JOptionPane.showMessageDialog(null, "Change limit successfully!");
        populateTable();
    }//GEN-LAST:event_changeLimitBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddListBtn;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JTextField ListNameTxt;
    private javax.swing.JButton ViewBtn;
    private javax.swing.JButton ViewOtherListBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton changeLimitBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox limitCbx;
    private javax.swing.JTable songListTbl;
    // End of variables declaration//GEN-END:variables
}
