/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustomerArea;

import Music.Album;
import Music.Song;
import Music.SongDirectory;
import MusicEcosystem.UserAccount.CustomerAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author liwen
 */
public class ViewSongAddSong extends javax.swing.JPanel {

    /**
     * Creates new form ViewSongAddSong
     */
    JPanel container;
    SongDirectory songDirectory;
    CustomerAccount account;
    private String title;
    public ViewSongAddSong(JPanel container, SongDirectory songDirectory, CustomerAccount account, String title) {
        initComponents();
        this.container=container;
        this.songDirectory = songDirectory;
        this.account = account;
        this.title = title;
        titleLabel.setText("Song List name: " + title);
        this.setSize(630, 511);
        populateTabel();
        populateCbx();
    }
    public void populateTabel() {
        int rowCount = songTbl.getRowCount();
        DefaultTableModel model = (DefaultTableModel)songTbl.getModel();
        for(int i = rowCount - 1; i >=0; i--) {
            model.removeRow(i);
        }
        
        for (Song song : songDirectory.getSongList()) {
            Object[] row = new Object[4];
            row[0] = song.getId();
            row[1] = song;
            row[2] = song.getSinger();
            row[3] = song.getTime();
            model.addRow(row);
        }
    }

    public void populateCbx() {
        songListCbx.removeAllItems();
        for (Album album : account.getAlbumDirectory().getAlbumList()) {
            songListCbx.addItem(album);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        songTbl = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        addSongBtn = new javax.swing.JButton();
        songListCbx = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        singerTxt = new javax.swing.JTextField();
        showBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(217, 220, 242));

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titleLabel.setText("<SongList_Name>");

        songTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Singer", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(songTbl);

        backBtn.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        backBtn.setText("< < back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        addSongBtn.setText("Add Song to List");
        addSongBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSongBtnActionPerformed(evt);
            }
        });

        songListCbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        songListCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                songListCbxActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel2.setText("Choose Song List :");

        jLabel1.setText("Search songs by singer name : ");

        showBtn.setText("Show Songs");
        showBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(titleLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addSongBtn)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(singerTxt)
                                        .addGap(18, 18, 18)
                                        .addComponent(showBtn))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(songListCbx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(backBtn)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(titleLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(singerTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(songListCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addSongBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addSongBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSongBtnActionPerformed
        // TODO add your handling code here:
        int selectRow = songTbl.getSelectedRow();
        if (selectRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select one row from the table first!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (songListCbx.getItemCount() == 0) {
            JOptionPane.showMessageDialog(null, "Please Create a songList first!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Album al = (Album) songListCbx.getSelectedItem();
        if (((Song) songTbl.getValueAt(selectRow, 1)).isVip() && !account.isVip()) {
            JOptionPane.showMessageDialog(null, "This song is provided to VIP user, but you are not VIP!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int result = al.getSongDirectory().AddSong(( Song ) songTbl.getValueAt(selectRow, 1));
        if (result == 0) {
            JOptionPane.showMessageDialog(null, "You have had this song in this songList!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        JOptionPane.showMessageDialog(null, "Add the song to songList successfully!");
        
    }//GEN-LAST:event_addSongBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backBtnActionPerformed

    private void songListCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_songListCbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_songListCbxActionPerformed

    private void showBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showBtnActionPerformed
        // TODO add your handling code here:
        if (singerTxt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please input singer name!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int rowCount = songTbl.getRowCount();
        DefaultTableModel model = (DefaultTableModel)songTbl.getModel();
        for(int i = rowCount - 1; i >=0; i--) {
            model.removeRow(i);
        }
        for (Song song : songDirectory.getSongList()) {
            if (song.getSinger().equals(singerTxt.getText())) {
                Object[] row = new Object[4];
                row[0] = song.getId();
                row[1] = song;
                row[2] = song.getSinger();
                row[3] = song.getTime();
                model.addRow(row);
            }
        }
    }//GEN-LAST:event_showBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSongBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton showBtn;
    private javax.swing.JTextField singerTxt;
    private javax.swing.JComboBox songListCbx;
    private javax.swing.JTable songTbl;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
