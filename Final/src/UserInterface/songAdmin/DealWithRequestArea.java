/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.songAdmin;

import Music.Song;
import MusicEcosystem.Organization.SongOrganization;
import WorkQueue.ChangeSongRequest;
import WorkQueue.DeleteSongRequest;
import WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

/**
 *
 * @author xutao
 */
public class DealWithRequestArea extends javax.swing.JPanel {

    /**
     * Creates new form DealWithRequestArea
     */
    private JPanel container;
    private SongOrganization songOrganization;
    private WorkRequest workRequest;
    public DealWithRequestArea(JPanel container, SongOrganization songOrganization, WorkRequest workRequest) {
        initComponents();
        this.container  = container;
        this.songOrganization = songOrganization;
        this.workRequest = workRequest;
        this.setSize(630, 511);
        title.setHorizontalAlignment(SwingConstants.CENTER);
        //System.out.println(workRequest.getStatus() + ",  " + WorkRequest.states.Undone.getValue());
        Populate();
        
    }
    
    public void Populate() {
        if (workRequest instanceof DeleteSongRequest && workRequest.getStatus().equals(WorkRequest.states.Undone.getValue())) {
            deleteBtn.setEnabled(true);
            viewBtn.setEnabled(false);
        }
        else if (workRequest instanceof ChangeSongRequest && workRequest.getStatus().equals(WorkRequest.states.Undone.getValue())){
            deleteBtn.setEnabled(false);
            viewBtn.setEnabled(true);
        }
        else {
            deleteBtn.setEnabled(false);
            viewBtn.setEnabled(false);
        }
        idTxt.setText(String.valueOf(workRequest.getSongID()));
        messageTextArea.setText(workRequest.getMassage());
        messageTextArea.setLineWrap(true);
        senderTxt.setText(String.valueOf(workRequest.getSender()) );
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        rTimeTxt.setText(df.format(workRequest.getRequestDate()));
        if( workRequest.getResolveDate() == null ) {
            reTimeTxt.setText("");
        }
        else
            reTimeTxt.setText(df.format(workRequest.getResolveDate()));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageTextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        idTxt = new javax.swing.JTextField();
        viewBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        rTimeTxt = new javax.swing.JTextField();
        senderTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        reTimeTxt = new javax.swing.JTextField();

        setBackground(new java.awt.Color(217, 220, 242));

        title.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        title.setText("Work Request Detail");

        jLabel2.setText("Request Description :");

        messageTextArea.setEditable(false);
        messageTextArea.setColumns(20);
        messageTextArea.setRows(5);
        messageTextArea.setEnabled(false);
        jScrollPane1.setViewportView(messageTextArea);

        jLabel3.setText("Song ID :");

        idTxt.setEditable(false);
        idTxt.setEnabled(false);

        viewBtn.setText("View Song");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jButton3.setText("< < back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setText("Request Time :");

        jLabel5.setText("Sender : ");

        rTimeTxt.setEditable(false);
        rTimeTxt.setEnabled(false);

        senderTxt.setEditable(false);
        senderTxt.setEnabled(false);

        jLabel6.setText("Resolve Time :");

        reTimeTxt.setEditable(false);
        reTimeTxt.setEnabled(false);
        reTimeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reTimeTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(deleteBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(viewBtn))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(idTxt))
                                .addComponent(jLabel2)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(rTimeTxt)
                                        .addComponent(senderTxt)
                                        .addComponent(reTimeTxt)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(title)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(title)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(senderTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rTimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(reTimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewBtn)
                    .addComponent(deleteBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
        
        Component[] component = container.getComponents();
        for ( Component c : component ) {
            if ( c instanceof SongManageWorkQueueArea) {
                SongManageWorkQueueArea adJP = (SongManageWorkQueueArea) c;
                adJP.populate();
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        DeleteSongRequest deleteSongRequest = (DeleteSongRequest) workRequest;
        int result = songOrganization.getSongDirectory().RemoveSong(deleteSongRequest.getSongID());
        if (result == 0) {
            JOptionPane.showMessageDialog(null, "This is no such song !!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        deleteSongRequest.setStatus(WorkRequest.states.Finish.getValue());
        Date date = new Date();
        deleteSongRequest.setResolveDate(date);
        JOptionPane.showMessageDialog(null, "Work Finish !!");
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
        
        Component[] component = container.getComponents();
        for ( Component c : component ) {
            if ( c instanceof SongManageWorkQueueArea) {
                SongManageWorkQueueArea adJP = (SongManageWorkQueueArea) c;
                adJP.populate();
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:
        Song song = null;
        ChangeSongRequest changeSongRequest = (ChangeSongRequest) workRequest;
        for (Song s : songOrganization.getSongDirectory().getSongList()) {
            if(s.getId() == changeSongRequest.getSongID()) {
                song = s;
                break;
            }
        }
        if (song == null) {
            JOptionPane.showMessageDialog(null, "This is no such song !!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        ViewSongDetail vsdJP = new ViewSongDetail(container, song, changeSongRequest);
        container.add("ViewSongDetail",vsdJP);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_viewBtnActionPerformed

    private void reTimeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reTimeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reTimeTxtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField idTxt;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea messageTextArea;
    private javax.swing.JTextField rTimeTxt;
    private javax.swing.JTextField reTimeTxt;
    private javax.swing.JTextField senderTxt;
    private javax.swing.JLabel title;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
