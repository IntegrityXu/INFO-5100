/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.songAdmin;

import MusicEcosystem.Organization.SongOrganization;
import javax.swing.JPanel;
import WorkQueue.*;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author xutao
 */
public class SongManageWorkQueueArea extends javax.swing.JPanel {

    /**
     * Creates new form SongManageWorkQueueArea
     */
    JPanel container;
    WorkQueue workQueue;
    SongOrganization songOrganization;
    public SongManageWorkQueueArea(JPanel contaitner, WorkQueue workQueue, SongOrganization songOrganization) {
        initComponents();
        this.container = contaitner;
        this.workQueue = workQueue;
        this.songOrganization = songOrganization;
        this.setSize(630, 511);
        title.setHorizontalAlignment(SwingConstants.CENTER);
        populate();
        populateCbx();
    }
    
    public void populate() {
        DefaultTableModel model = (DefaultTableModel) workRequestTbl.getModel();
        int rowCount = workRequestTbl.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        
        for (WorkRequest workRequest : workQueue.getWorkqueue()) {
            if (workRequest.getReceiver() instanceof SongOrganization) {
                Object [] row = new Object[3];
                row[0] = workRequest;
                row[1] = workRequest.getRequestDate();
                row[2] = workRequest.getStatus();
                model.addRow(row);
            }
        }
         
    }
    
    public void populateCbx() {
        statusChooseCbx.removeAllItems();
        statusChooseCbx.addItem("All");
        statusChooseCbx.addItem(WorkRequest.states.Finish.getValue());
        statusChooseCbx.addItem(WorkRequest.states.Undone.getValue());
        statusChooseCbx.addItem(WorkRequest.states.Canceled.getValue());
        statusChooseCbx.addItem(WorkRequest.states.Reject.getValue());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestTbl = new javax.swing.JTable();
        detailBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        statusChooseCbx = new javax.swing.JComboBox<>();
        searchBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(217, 220, 242));

        title.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        title.setText("Works Need to deal with");

        workRequestTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "RequestDate", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestTbl);

        detailBtn.setText("Details");
        detailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailBtnActionPerformed(evt);
            }
        });

        backBtn.setText("< < back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Reject");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        statusChooseCbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Select work requests by status :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(title))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(backBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(statusChooseCbx, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(detailBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(title)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(detailBtn)
                            .addComponent(cancelBtn))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(7, 7, 7)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBtn)
                    .addComponent(statusChooseCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(82, 82, 82)
                .addComponent(backBtn)
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select one Row from the table !", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest wrq = (WorkRequest) workRequestTbl.getValueAt(selectedRow, 0);
        if ( !wrq.getStatus().equals(WorkRequest.states.Undone.getValue()) ) {
            JOptionPane.showMessageDialog(null, "Only the Undone request can be rejected !", "Warning", JOptionPane.WARNING_MESSAGE);
            return ;
        }
        int result = JOptionPane.showConfirmDialog(null, "Are you sure to reject this request?", "Waring", JOptionPane.YES_NO_OPTION);
        if ( result == JOptionPane.NO_OPTION) {
            return;
        }
        
        wrq.setStatus(WorkRequest.states.Reject.getValue());
        Date date = new Date();
        wrq.setResolveDate(date);
        populate();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void detailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailBtnActionPerformed
        // TODO add your handling code here:
        int selectRow = workRequestTbl.getSelectedRow();
        if (selectRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select one Row from the table !", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest workRequest = (WorkRequest) workRequestTbl.getValueAt(selectRow, 0);
        DealWithRequestArea dwraJP = new DealWithRequestArea(container, songOrganization, workRequest);
        container.add("DealWithRequestArea", dwraJP);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_detailBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        String state = (String) statusChooseCbx.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) workRequestTbl.getModel();
        int rowCount = workRequestTbl.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        if (state.equals("All")) {
            populate();
            return;
        }
        for (WorkRequest workRequest : workQueue.getWorkqueue()) {
            if (workRequest.getReceiver() instanceof SongOrganization && workRequest.getStatus().equals(state)) {
                Object [] row = new Object[3];
                row[0] = workRequest;
                row[1] = workRequest.getRequestDate();
                row[2] = workRequest.getStatus();
                model.addRow(row);
            }
        }
    }//GEN-LAST:event_searchBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton detailBtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchBtn;
    private javax.swing.JComboBox<String> statusChooseCbx;
    private javax.swing.JLabel title;
    private javax.swing.JTable workRequestTbl;
    // End of variables declaration//GEN-END:variables
}
