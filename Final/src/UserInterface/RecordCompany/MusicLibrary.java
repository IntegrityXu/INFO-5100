/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.RecordCompany;

import Music.*;
import MusicEcosystem.Ecosystem;
import MusicEcosystem.Network.Network;
import MusicEcosystem.Organization.RecordCompanyOrganization;
import MusicEcosystem.Organization.SongOrganization;
import MusicEcosystem.UserAccount.UserAccount;
import WorkQueue.DeleteSongRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author liwen
 */
public class MusicLibrary extends javax.swing.JPanel {
    JPanel container;
    private RecordCompanyOrganization recordCompanyOrganization;
    private UserAccount account;
    private Network network;
    /**
     * Creates new form MusicLibrary
     */
    public MusicLibrary(JPanel container,RecordCompanyOrganization recordCompanyOrganization, UserAccount account, Network network) {
        initComponents();
        this.container=container;
        this.recordCompanyOrganization = recordCompanyOrganization;
        this.account = account;
        this.network = network;
        this.setSize(630, 511);
        for(Song s:recordCompanyOrganization.getSongDirectory().getSongList()) {
            System.out.println(s);
        }
        refreshTable();
    }

    public void refreshTable() {
        libiraryTbl.removeAll();
        DefaultTableModel model = (DefaultTableModel)libiraryTbl.getModel();
        int count = libiraryTbl.getRowCount();
        for (int i = count - 1; i >=0; i --) {
            model.removeRow(i);
        }
        
        for(Song s:recordCompanyOrganization.getSongDirectory().getSongList()) {
            Object row[] = new Object[3];
            row[0] = s;
            row[1] = s.getId();
            row[2] = s.getSinger();       
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        libiraryTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        DeleteBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        viewBtn = new javax.swing.JButton();
        createBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(217, 220, 242));
        setPreferredSize(new java.awt.Dimension(500, 700));
        setRequestFocusEnabled(false);

        libiraryTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Song Name", "Song ID", "Singer Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(libiraryTbl);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Music Library");

        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        backBtn.setText("<<back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        viewBtn.setText("View Detail");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        createBtn.setText("Create New Song");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(createBtn)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(viewBtn)
                                .addGap(18, 18, 18)
                                .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(backBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jLabel1)))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteBtn)
                    .addComponent(viewBtn))
                .addGap(18, 18, 18)
                .addComponent(createBtn)
                .addGap(84, 84, 84)
                .addComponent(backBtn)
                .addContainerGap(31, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        // TODO add your handling code here:
        int row = libiraryTbl.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Song s = (Song)libiraryTbl.getValueAt(row, 0);
        recordCompanyOrganization.getSongDirectory().RemoveSong(s.getId());
        refreshTable();
        int result = JOptionPane.showConfirmDialog(null, "Do you want to send \"delete song\" request?", 
                "Warning", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.NO_OPTION)
            return;
        DeleteSongRequest deleteSongRequest = new DeleteSongRequest(account, new SongOrganization(), "Delete a song", s.getId());
        network.getWorkQueue().AddWorkrequest(deleteSongRequest);
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:
        int row = libiraryTbl.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Song song = (Song)libiraryTbl.getValueAt(row, 0);
        SongDetail songDetail = new SongDetail(container, song, recordCompanyOrganization, account, network);
        container.add("SongDetail", songDetail);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_viewBtnActionPerformed

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        // TODO add your handling code here:
        CreateSong cs = new CreateSong(container, recordCompanyOrganization);
        container.add("create song", cs);
        CardLayout layout = (CardLayout)container.getLayout();
        layout.next(container);
        
    }//GEN-LAST:event_createBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton createBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable libiraryTbl;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
